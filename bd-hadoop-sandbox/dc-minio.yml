#
# docker volume create --name sandbox_apps_path --opt type=none --opt device=/apps --opt o=bind
#
---
version: '3.9'
services:
#
  minio:
    image: minio/minio:latest
    hostname: minio.sandbox.net
    container_name: minio
    healthcheck:
      test: echo $HOSTNAME || exit 1
      retries: 20
      interval: 10s
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
      - MINIO_ADDRESS=0.0.0.0:9010
      - MINIO_CONSOLE_ADDRESS=0.0.0.0:9011
      - AWS_S3_ENDPOINT=http://minio.sandbox.net:9010
      - AWS_ACCESS_KEY=ffaJ6a2MOj8mZ5lI3P6h
      - AWS_ACCESS_SECRET=9u8TCmTtg9VyCVzgfDl6LvgcDd84DaM4h43bg1Bs
      - AWS_REGION=us-east-1
    ports:
      - "9010:9010"
      - "9011:9011"
    command: ["server", "/data", "--console-address", ":9011"]
    volumes:
      - sandbox_apps_path:/apps
      - /apps/hostpath/minio:/data



#
  #
  mc:
    image: minio/mc:latest
    hostname: mc.sandbox.net
    container_name: mc
    healthcheck:
      test: curl -f http://minio.sandbox.net:9000 || exit 1
      retries: 20
      interval: 10s
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - AWS_S3_ENDPOINT=http://minio.sandbox.net:9010
      - AWS_ACCESS_KEY=ffaJ6a2MOj8mZ5lI3P6h
      - AWS_ACCESS_SECRET=9u8TCmTtg9VyCVzgfDl6LvgcDd84DaM4h43bg1Bs
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio.sandbox.net:9010 admin password) do echo '...waiting...' && sleep 1; done;
      # /usr/bin/mc rm -r --force minio/warehouse ;
      /usr/bin/mc config host add minio http://minio.sandbox.net:9010 admin password
      /usr/bin/mc mb minio/warehouse --ignore-existing ;
      /usr/bin/mc policy set public minio/warehouse ;
      tail -f /dev/null
      "

#
volumes:
  #
  sandbox_apps_path:
    external: true
  sandbox_security_secrets:
    external: true

#
networks:
  default:
    external: true
    driver: bridge
    name: sandbox.net
