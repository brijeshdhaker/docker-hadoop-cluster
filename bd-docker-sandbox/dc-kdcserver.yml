#
# docker volume create --name sandbox_krb5_stash --opt type=none --opt device=/apps/sandbox/kerberos/stash --opt o=bind
# docker volume create --name sandbox_krb5_principal --opt type=none --opt device=/apps/sandbox/kerberos/principal --opt o=bind

#
# Based on https://github.com/ist-dsi/docker-kerberos
#

# version: "3.9"
#
services:
  #
  #
  #
  kdcserver:
    image: brijeshdhaker/kdcserver:22.04
    container_name: kdcserver
    hostname: kdcserver.sandbox.net
    healthcheck:
      test: echo srvr || exit 1
      retries: 20
      interval: 10s
    ports:
      - "749:749"
      - "750:750"
      - "88:88/udp"
    volumes:
      - sandbox_apps_path:/apps
      - /dev/urandom:/dev/random      # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
      - sandbox_krb5_stash:/etc/krb5kdc
      - sandbox_krb5_principal:/var/lib/krb5kdc/
      - ./conf/kerberos:/etc/kerberos
    environment:
      REALM: SANDBOX.NET
      DOMAIN_REALM: sandbox.net
      MASTER_KEY_TYPE: aes256-cts-hmac-sha1-96:normal
      SUPPORTED_ENCRYPTION_TYPES: aes256-cts-hmac-sha1-96:normal aes128-cts-hmac-sha1-96:normal
      KADMIN_PRINCIPAL: kadmin/admin
      KADMIN_PASSWORD: kadmin
      KUSERS_PASSWORD: kuser
    env_file:
      - ./conf/kerberos/docker_kerberos.env

#
# Docker Volumes
#
volumes:
  #
  sandbox_apps_path:
    external: true
  #
  sandbox_security_secrets:
    external: true
  #
  sandbox_krb5_stash:
    external: true
  #  
  sandbox_krb5_principal:
    external: true
#
# Docker Networks
#
networks:
  default:
    external: true
    driver: bridge
    name: sandbox.net