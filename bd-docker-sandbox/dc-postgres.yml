#
# Use postgres/example user/password credentials
#

# docker volume create --name sandbox_apps_path --opt type=none --opt device=/apps --opt o=bind
# docker volume create --name sandbox_postgres_data --opt type=none --opt device=/apps/sandbox/postgres/data --opt o=bind
# docker volume create --name sandbox_postgres_conf --opt type=none --opt device=/apps/sandbox/postgres/conf --opt o=bind
# docker volume create --name sandbox_postgres_init --opt type=none --opt device=/apps/sandbox/postgres/init.d --opt o=bind
#
---
# version: "3.9"

services:
  #
  # postgres:15.2 database Server
  #
  postgres:
    image: postgres:15.2
    restart: always
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - sandbox_base_path:/apps/sandbox
      - sandbox_postgres_data:/var/lib/postgresql/data
      - sandbox_postgres_init:/docker-entrypoint-initdb.d
    env_file:
      - envs/docker_postgres.env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
      POSTGRES_INITDB_WALDIR: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  #
  #
  #
  adminer:
    image: adminer
    restart: always
    hostname: adminer
    container_name: adminer
    ports:
      - 8080:8080


#
volumes:
  sandbox_base_path:
    external: true
  sandbox_postgres_data:
    external: true
  sandbox_postgres_conf:
    external: true
  sandbox_postgres_init:
    external: true

#
networks:
  default:
    external: true
    driver: bridge
    name: sandbox.net