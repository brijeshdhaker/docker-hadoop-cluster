kafka:
  transaction-topic: transaction-avro-topic
topic:
  name: users
  partitions-num: 1
  replication-factor: 1
server:
  port: 9080
  servlet:
    context-path: /api/v1
  http2:
    enabled: true
spring:
  application:
    name: bd-spring-module
  #
  datasource:
    name: SANDBOXDB
    username: mysqladmin
    password: mysqladmin
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql-docker.sb-apps.svc.cluster.local:3306/SANDBOXDB?zeroDateTimeBehavior=CONVERT_TO_NULL
  #
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
      use-new-id-gnerator-mappings: false
    properties:
      hibernate:
        show-sql: true
        use-sql-comments: true
        format-sql: true
        type: info
  #
  kafka:
    transaction-topic: transaction-avro-topic
    bootstrap-servers:
      - kafkabroker.sandbox.net:9092
    properties:
      # Schema Registry Connection parameter
      schema.registry.url: http://schemaregistry.sandbox.net:8081
      schema.registry.ssl.keystore.location: /apps/security/ssl/clients.keystore.jks
      schema.registry.ssl.keystore.password: confluent
      schema.registry.ssl.key.password: confluent
      schema.registry.ssl.keystore.type: JKS
      schema.registry.ssl.truststore.location: /apps/security/ssl/clients.truststore.jks
      schema.registry.ssl.truststore.password: confluent
    consumer:
      properties:
        specific.avro.reader: false
        # spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        # spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: sb-sandbox-cg
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      #value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    producer:
      #properties:
      #  allow.auto.create.topics: false
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    template:
      default-topic:
#
logging:
  level:
    root: info