---
# Source: bd-spring-module/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: springboot-app-configmap
data:
  environment: "K8S"
  message: "Hello World"
  #
  toppings: |-
    - "Mushrooms"
    - "Cheese"
    - "Peppers"
    - "Onions"
    - "Pineapple"
  #
  sizes: |-
    - small
    - medium
    - large
  #
  pizzaToppings: |-
      0: mushrooms
      1: cheese
      2: peppers
      3: onions
      4: pineapple
  #
  drink: "coffee"
  food: "Bread"
  #
  application.yaml: |- 
    #
    server:
      port: 9080
      servlet:
        context-path: /api/v1
      http2:
        enabled: true
    #
    springdoc:
      api-docs:
        path: /api-docs
    #
    spring:
      #
      config:
        activate:
          on-profile: k8s
      application:
        name: bd-spring-module
      #
      datasource:
        name: SANDBOXDB
        username: mysqladmin
        password: mysqladmin
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://mysql-service.sb-apps.svc.cluster.local:3306/SANDBOXDB?zeroDateTimeBehavior=CONVERT_TO_NULL
      #
      jpa:
        # database-platform: org.hibernate.dialect.MySQLDialect
        hibernate:
          ddl-auto: none
          use-new-id-gnerator-mappings: false
        properties:
          hibernate:
            show-sql: true
            use-sql-comments: true
            format-sql: true
            type: info
      #
      liquibase:
        enabled: true
        change-log: classpath:liquibase/master.yml
        contexts: mysql
        parameters:
          textColumnType: TEXT
      #
      kafka:
        transaction-topic: transaction-avro-topic
        bootstrap-servers:
          - kafka-service.sb-apps.svc.cluster.local:9092
        properties:
          # Schema Registry Connection parameter
          schema.registry.url: http://kafka-service.sb-apps.svc.cluster.local:8081
          schema.registry.ssl.keystore.location: /mnt/apps/security/ssl/clients.keystore.jks
          schema.registry.ssl.keystore.password: confluent
          schema.registry.ssl.key.password: confluent
          schema.registry.ssl.keystore.type: JKS
          schema.registry.ssl.truststore.location: /mnt/apps/security/ssl/clients.truststore.jks
          schema.registry.ssl.truststore.password: confluent
        consumer:
          properties:
            specific.avro.reader: false
            # spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
            # spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
          group-id: sb-k8s-cg
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
          #value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
          interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
        producer:
          #properties:
          #  allow.auto.create.topics: false
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
          interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
        template:
          default-topic: transaction-avro-topic
    #
    management:
      security:
        enabled: false
      endpoints:
        enabled-by-default: true
        web:
          exposure:
            include: "*"
      endpoint:
        info:
          enabled: true
    #
    logging:
      level:
        root: info
        org.springframework.kafka: info
        org.springframework.transaction: info
  ehcache.xml: |- 
    <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://www.ehcache.org/v3"
            xmlns:jsr107="http://www.ehcache.org/v3/jsr107"
            xsi:schemaLocation="
                http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core-3.0.xsd
                http://www.ehcache.org/v3/jsr107 http://www.ehcache.org/schema/ehcache-107-ext-3.0.xsd">
    
        <cache alias="userCache">
            <key-type>java.lang.Long</key-type>
            <value-type>org.examples.sb.models.User</value-type>
            <expiry>
                <ttl unit="seconds">120</ttl>
            </expiry>
    
            <listeners>
                <listener>
                    <class>org.examples.sb.config.cache.CacheEventLogger</class>
                    <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                    <event-ordering-mode>UNORDERED</event-ordering-mode>
                    <events-to-fire-on>CREATED</events-to-fire-on>
                    <events-to-fire-on>EVICTED</events-to-fire-on>
                    <events-to-fire-on>EXPIRED</events-to-fire-on>
                </listener>
            </listeners>
    
            <resources>
                <heap unit="entries">2</heap>
                <offheap unit="MB">10</offheap>
            </resources>
        </cache>
    
    </config>
