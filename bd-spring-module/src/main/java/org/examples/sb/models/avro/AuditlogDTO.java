/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.examples.sb.models.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AuditlogDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5089161197647153870L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AuditlogDTO\",\"namespace\":\"org.examples.sb.models.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"logicalType\":\"uuid\"},{\"name\":\"userid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"auditType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"logAction\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"logMessage\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"refrenceId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"refrenceType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"addTs\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"updTs\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AuditlogDTO> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AuditlogDTO> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AuditlogDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AuditlogDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AuditlogDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AuditlogDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AuditlogDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AuditlogDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AuditlogDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String uuid;
  private java.lang.String userid;
  private java.lang.String auditType;
  private java.lang.String logAction;
  private java.lang.String logMessage;
  private java.lang.String refrenceId;
  private java.lang.String refrenceType;
  private long addTs;
  private long updTs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AuditlogDTO() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param uuid The new value for uuid
   * @param userid The new value for userid
   * @param auditType The new value for auditType
   * @param logAction The new value for logAction
   * @param logMessage The new value for logMessage
   * @param refrenceId The new value for refrenceId
   * @param refrenceType The new value for refrenceType
   * @param addTs The new value for addTs
   * @param updTs The new value for updTs
   */
  public AuditlogDTO(java.lang.Long id, java.lang.String uuid, java.lang.String userid, java.lang.String auditType, java.lang.String logAction, java.lang.String logMessage, java.lang.String refrenceId, java.lang.String refrenceType, java.lang.Long addTs, java.lang.Long updTs) {
    this.id = id;
    this.uuid = uuid;
    this.userid = userid;
    this.auditType = auditType;
    this.logAction = logAction;
    this.logMessage = logMessage;
    this.refrenceId = refrenceId;
    this.refrenceType = refrenceType;
    this.addTs = addTs;
    this.updTs = updTs;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return uuid;
    case 2: return userid;
    case 3: return auditType;
    case 4: return logAction;
    case 5: return logMessage;
    case 6: return refrenceId;
    case 7: return refrenceType;
    case 8: return addTs;
    case 9: return updTs;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: uuid = value$ != null ? value$.toString() : null; break;
    case 2: userid = value$ != null ? value$.toString() : null; break;
    case 3: auditType = value$ != null ? value$.toString() : null; break;
    case 4: logAction = value$ != null ? value$.toString() : null; break;
    case 5: logMessage = value$ != null ? value$.toString() : null; break;
    case 6: refrenceId = value$ != null ? value$.toString() : null; break;
    case 7: refrenceType = value$ != null ? value$.toString() : null; break;
    case 8: addTs = (java.lang.Long)value$; break;
    case 9: updTs = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }


  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'userid' field.
   * @return The value of the 'userid' field.
   */
  public java.lang.String getUserid() {
    return userid;
  }


  /**
   * Sets the value of the 'userid' field.
   * @param value the value to set.
   */
  public void setUserid(java.lang.String value) {
    this.userid = value;
  }

  /**
   * Gets the value of the 'auditType' field.
   * @return The value of the 'auditType' field.
   */
  public java.lang.String getAuditType() {
    return auditType;
  }


  /**
   * Sets the value of the 'auditType' field.
   * @param value the value to set.
   */
  public void setAuditType(java.lang.String value) {
    this.auditType = value;
  }

  /**
   * Gets the value of the 'logAction' field.
   * @return The value of the 'logAction' field.
   */
  public java.lang.String getLogAction() {
    return logAction;
  }


  /**
   * Sets the value of the 'logAction' field.
   * @param value the value to set.
   */
  public void setLogAction(java.lang.String value) {
    this.logAction = value;
  }

  /**
   * Gets the value of the 'logMessage' field.
   * @return The value of the 'logMessage' field.
   */
  public java.lang.String getLogMessage() {
    return logMessage;
  }


  /**
   * Sets the value of the 'logMessage' field.
   * @param value the value to set.
   */
  public void setLogMessage(java.lang.String value) {
    this.logMessage = value;
  }

  /**
   * Gets the value of the 'refrenceId' field.
   * @return The value of the 'refrenceId' field.
   */
  public java.lang.String getRefrenceId() {
    return refrenceId;
  }


  /**
   * Sets the value of the 'refrenceId' field.
   * @param value the value to set.
   */
  public void setRefrenceId(java.lang.String value) {
    this.refrenceId = value;
  }

  /**
   * Gets the value of the 'refrenceType' field.
   * @return The value of the 'refrenceType' field.
   */
  public java.lang.String getRefrenceType() {
    return refrenceType;
  }


  /**
   * Sets the value of the 'refrenceType' field.
   * @param value the value to set.
   */
  public void setRefrenceType(java.lang.String value) {
    this.refrenceType = value;
  }

  /**
   * Gets the value of the 'addTs' field.
   * @return The value of the 'addTs' field.
   */
  public long getAddTs() {
    return addTs;
  }


  /**
   * Sets the value of the 'addTs' field.
   * @param value the value to set.
   */
  public void setAddTs(long value) {
    this.addTs = value;
  }

  /**
   * Gets the value of the 'updTs' field.
   * @return The value of the 'updTs' field.
   */
  public long getUpdTs() {
    return updTs;
  }


  /**
   * Sets the value of the 'updTs' field.
   * @param value the value to set.
   */
  public void setUpdTs(long value) {
    this.updTs = value;
  }

  /**
   * Creates a new AuditlogDTO RecordBuilder.
   * @return A new AuditlogDTO RecordBuilder
   */
  public static org.examples.sb.models.avro.AuditlogDTO.Builder newBuilder() {
    return new org.examples.sb.models.avro.AuditlogDTO.Builder();
  }

  /**
   * Creates a new AuditlogDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AuditlogDTO RecordBuilder
   */
  public static org.examples.sb.models.avro.AuditlogDTO.Builder newBuilder(org.examples.sb.models.avro.AuditlogDTO.Builder other) {
    if (other == null) {
      return new org.examples.sb.models.avro.AuditlogDTO.Builder();
    } else {
      return new org.examples.sb.models.avro.AuditlogDTO.Builder(other);
    }
  }

  /**
   * Creates a new AuditlogDTO RecordBuilder by copying an existing AuditlogDTO instance.
   * @param other The existing instance to copy.
   * @return A new AuditlogDTO RecordBuilder
   */
  public static org.examples.sb.models.avro.AuditlogDTO.Builder newBuilder(org.examples.sb.models.avro.AuditlogDTO other) {
    if (other == null) {
      return new org.examples.sb.models.avro.AuditlogDTO.Builder();
    } else {
      return new org.examples.sb.models.avro.AuditlogDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for AuditlogDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AuditlogDTO>
    implements org.apache.avro.data.RecordBuilder<AuditlogDTO> {

    private java.lang.Long id;
    private java.lang.String uuid;
    private java.lang.String userid;
    private java.lang.String auditType;
    private java.lang.String logAction;
    private java.lang.String logMessage;
    private java.lang.String refrenceId;
    private java.lang.String refrenceType;
    private long addTs;
    private long updTs;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.examples.sb.models.avro.AuditlogDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.userid)) {
        this.userid = data().deepCopy(fields()[2].schema(), other.userid);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.auditType)) {
        this.auditType = data().deepCopy(fields()[3].schema(), other.auditType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.logAction)) {
        this.logAction = data().deepCopy(fields()[4].schema(), other.logAction);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.logMessage)) {
        this.logMessage = data().deepCopy(fields()[5].schema(), other.logMessage);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.refrenceId)) {
        this.refrenceId = data().deepCopy(fields()[6].schema(), other.refrenceId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.refrenceType)) {
        this.refrenceType = data().deepCopy(fields()[7].schema(), other.refrenceType);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.addTs)) {
        this.addTs = data().deepCopy(fields()[8].schema(), other.addTs);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.updTs)) {
        this.updTs = data().deepCopy(fields()[9].schema(), other.updTs);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing AuditlogDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(org.examples.sb.models.avro.AuditlogDTO other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userid)) {
        this.userid = data().deepCopy(fields()[2].schema(), other.userid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.auditType)) {
        this.auditType = data().deepCopy(fields()[3].schema(), other.auditType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.logAction)) {
        this.logAction = data().deepCopy(fields()[4].schema(), other.logAction);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.logMessage)) {
        this.logMessage = data().deepCopy(fields()[5].schema(), other.logMessage);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.refrenceId)) {
        this.refrenceId = data().deepCopy(fields()[6].schema(), other.refrenceId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.refrenceType)) {
        this.refrenceType = data().deepCopy(fields()[7].schema(), other.refrenceType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addTs)) {
        this.addTs = data().deepCopy(fields()[8].schema(), other.addTs);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.updTs)) {
        this.updTs = data().deepCopy(fields()[9].schema(), other.updTs);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }


    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setUuid(java.lang.String value) {
      validate(fields()[1], value);
      this.uuid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userid' field.
      * @return The value.
      */
    public java.lang.String getUserid() {
      return userid;
    }


    /**
      * Sets the value of the 'userid' field.
      * @param value The value of 'userid'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setUserid(java.lang.String value) {
      validate(fields()[2], value);
      this.userid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userid' field has been set.
      * @return True if the 'userid' field has been set, false otherwise.
      */
    public boolean hasUserid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userid' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearUserid() {
      userid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'auditType' field.
      * @return The value.
      */
    public java.lang.String getAuditType() {
      return auditType;
    }


    /**
      * Sets the value of the 'auditType' field.
      * @param value The value of 'auditType'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setAuditType(java.lang.String value) {
      validate(fields()[3], value);
      this.auditType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'auditType' field has been set.
      * @return True if the 'auditType' field has been set, false otherwise.
      */
    public boolean hasAuditType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'auditType' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearAuditType() {
      auditType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'logAction' field.
      * @return The value.
      */
    public java.lang.String getLogAction() {
      return logAction;
    }


    /**
      * Sets the value of the 'logAction' field.
      * @param value The value of 'logAction'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setLogAction(java.lang.String value) {
      validate(fields()[4], value);
      this.logAction = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'logAction' field has been set.
      * @return True if the 'logAction' field has been set, false otherwise.
      */
    public boolean hasLogAction() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'logAction' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearLogAction() {
      logAction = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'logMessage' field.
      * @return The value.
      */
    public java.lang.String getLogMessage() {
      return logMessage;
    }


    /**
      * Sets the value of the 'logMessage' field.
      * @param value The value of 'logMessage'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setLogMessage(java.lang.String value) {
      validate(fields()[5], value);
      this.logMessage = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'logMessage' field has been set.
      * @return True if the 'logMessage' field has been set, false otherwise.
      */
    public boolean hasLogMessage() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'logMessage' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearLogMessage() {
      logMessage = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'refrenceId' field.
      * @return The value.
      */
    public java.lang.String getRefrenceId() {
      return refrenceId;
    }


    /**
      * Sets the value of the 'refrenceId' field.
      * @param value The value of 'refrenceId'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setRefrenceId(java.lang.String value) {
      validate(fields()[6], value);
      this.refrenceId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'refrenceId' field has been set.
      * @return True if the 'refrenceId' field has been set, false otherwise.
      */
    public boolean hasRefrenceId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'refrenceId' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearRefrenceId() {
      refrenceId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'refrenceType' field.
      * @return The value.
      */
    public java.lang.String getRefrenceType() {
      return refrenceType;
    }


    /**
      * Sets the value of the 'refrenceType' field.
      * @param value The value of 'refrenceType'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setRefrenceType(java.lang.String value) {
      validate(fields()[7], value);
      this.refrenceType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'refrenceType' field has been set.
      * @return True if the 'refrenceType' field has been set, false otherwise.
      */
    public boolean hasRefrenceType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'refrenceType' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearRefrenceType() {
      refrenceType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'addTs' field.
      * @return The value.
      */
    public long getAddTs() {
      return addTs;
    }


    /**
      * Sets the value of the 'addTs' field.
      * @param value The value of 'addTs'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setAddTs(long value) {
      validate(fields()[8], value);
      this.addTs = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'addTs' field has been set.
      * @return True if the 'addTs' field has been set, false otherwise.
      */
    public boolean hasAddTs() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'addTs' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearAddTs() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'updTs' field.
      * @return The value.
      */
    public long getUpdTs() {
      return updTs;
    }


    /**
      * Sets the value of the 'updTs' field.
      * @param value The value of 'updTs'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder setUpdTs(long value) {
      validate(fields()[9], value);
      this.updTs = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'updTs' field has been set.
      * @return True if the 'updTs' field has been set, false otherwise.
      */
    public boolean hasUpdTs() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'updTs' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.AuditlogDTO.Builder clearUpdTs() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AuditlogDTO build() {
      try {
        AuditlogDTO record = new AuditlogDTO();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.uuid = fieldSetFlags()[1] ? this.uuid : (java.lang.String) defaultValue(fields()[1]);
        record.userid = fieldSetFlags()[2] ? this.userid : (java.lang.String) defaultValue(fields()[2]);
        record.auditType = fieldSetFlags()[3] ? this.auditType : (java.lang.String) defaultValue(fields()[3]);
        record.logAction = fieldSetFlags()[4] ? this.logAction : (java.lang.String) defaultValue(fields()[4]);
        record.logMessage = fieldSetFlags()[5] ? this.logMessage : (java.lang.String) defaultValue(fields()[5]);
        record.refrenceId = fieldSetFlags()[6] ? this.refrenceId : (java.lang.String) defaultValue(fields()[6]);
        record.refrenceType = fieldSetFlags()[7] ? this.refrenceType : (java.lang.String) defaultValue(fields()[7]);
        record.addTs = fieldSetFlags()[8] ? this.addTs : (java.lang.Long) defaultValue(fields()[8]);
        record.updTs = fieldSetFlags()[9] ? this.updTs : (java.lang.Long) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AuditlogDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<AuditlogDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AuditlogDTO>
    READER$ = (org.apache.avro.io.DatumReader<AuditlogDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.uuid == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.uuid);
    }

    out.writeString(this.userid);

    out.writeString(this.auditType);

    out.writeString(this.logAction);

    out.writeString(this.logMessage);

    out.writeString(this.refrenceId);

    out.writeString(this.refrenceType);

    out.writeLong(this.addTs);

    out.writeLong(this.updTs);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.uuid = null;
      } else {
        this.uuid = in.readString();
      }

      this.userid = in.readString();

      this.auditType = in.readString();

      this.logAction = in.readString();

      this.logMessage = in.readString();

      this.refrenceId = in.readString();

      this.refrenceType = in.readString();

      this.addTs = in.readLong();

      this.updTs = in.readLong();

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.uuid = null;
          } else {
            this.uuid = in.readString();
          }
          break;

        case 2:
          this.userid = in.readString();
          break;

        case 3:
          this.auditType = in.readString();
          break;

        case 4:
          this.logAction = in.readString();
          break;

        case 5:
          this.logMessage = in.readString();
          break;

        case 6:
          this.refrenceId = in.readString();
          break;

        case 7:
          this.refrenceType = in.readString();
          break;

        case 8:
          this.addTs = in.readLong();
          break;

        case 9:
          this.updTs = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










