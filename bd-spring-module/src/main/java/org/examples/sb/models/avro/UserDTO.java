/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.examples.sb.models.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class UserDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7055973658374695104L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserDTO\",\"namespace\":\"org.examples.sb.models.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"logicalType\":\"uuid\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"emailAddr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"age\",\"type\":[\"null\",\"int\"]},{\"name\":\"dob\",\"type\":[\"null\",\"int\"],\"logicalType\":\"date\"},{\"name\":\"height\",\"type\":[\"null\",\"float\"]},{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":[]}]},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"addTs\",\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"},{\"name\":\"updTs\",\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"}],\"version\":\"1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserDTO> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserDTO> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String uuid;
  private java.lang.String name;
  private java.lang.String emailAddr;
  private java.lang.Integer age;
  private java.lang.Integer dob;
  private java.lang.Float height;
  private java.util.List<java.lang.String> roles;
  private java.lang.String status;
  private java.lang.Long addTs;
  private java.lang.Long updTs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserDTO() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param uuid The new value for uuid
   * @param name The new value for name
   * @param emailAddr The new value for emailAddr
   * @param age The new value for age
   * @param dob The new value for dob
   * @param height The new value for height
   * @param roles The new value for roles
   * @param status The new value for status
   * @param addTs The new value for addTs
   * @param updTs The new value for updTs
   */
  public UserDTO(java.lang.Long id, java.lang.String uuid, java.lang.String name, java.lang.String emailAddr, java.lang.Integer age, java.lang.Integer dob, java.lang.Float height, java.util.List<java.lang.String> roles, java.lang.String status, java.lang.Long addTs, java.lang.Long updTs) {
    this.id = id;
    this.uuid = uuid;
    this.name = name;
    this.emailAddr = emailAddr;
    this.age = age;
    this.dob = dob;
    this.height = height;
    this.roles = roles;
    this.status = status;
    this.addTs = addTs;
    this.updTs = updTs;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return uuid;
    case 2: return name;
    case 3: return emailAddr;
    case 4: return age;
    case 5: return dob;
    case 6: return height;
    case 7: return roles;
    case 8: return status;
    case 9: return addTs;
    case 10: return updTs;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: uuid = value$ != null ? value$.toString() : null; break;
    case 2: name = value$ != null ? value$.toString() : null; break;
    case 3: emailAddr = value$ != null ? value$.toString() : null; break;
    case 4: age = (java.lang.Integer)value$; break;
    case 5: dob = (java.lang.Integer)value$; break;
    case 6: height = (java.lang.Float)value$; break;
    case 7: roles = (java.util.List<java.lang.String>)value$; break;
    case 8: status = value$ != null ? value$.toString() : null; break;
    case 9: addTs = (java.lang.Long)value$; break;
    case 10: updTs = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }


  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'emailAddr' field.
   * @return The value of the 'emailAddr' field.
   */
  public java.lang.String getEmailAddr() {
    return emailAddr;
  }


  /**
   * Sets the value of the 'emailAddr' field.
   * @param value the value to set.
   */
  public void setEmailAddr(java.lang.String value) {
    this.emailAddr = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }


  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'dob' field.
   * @return The value of the 'dob' field.
   */
  public java.lang.Integer getDob() {
    return dob;
  }


  /**
   * Sets the value of the 'dob' field.
   * @param value the value to set.
   */
  public void setDob(java.lang.Integer value) {
    this.dob = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public java.lang.Float getHeight() {
    return height;
  }


  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.Float value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'roles' field.
   * @return The value of the 'roles' field.
   */
  public java.util.List<java.lang.String> getRoles() {
    return roles;
  }


  /**
   * Sets the value of the 'roles' field.
   * @param value the value to set.
   */
  public void setRoles(java.util.List<java.lang.String> value) {
    this.roles = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'addTs' field.
   * @return The value of the 'addTs' field.
   */
  public java.lang.Long getAddTs() {
    return addTs;
  }


  /**
   * Sets the value of the 'addTs' field.
   * @param value the value to set.
   */
  public void setAddTs(java.lang.Long value) {
    this.addTs = value;
  }

  /**
   * Gets the value of the 'updTs' field.
   * @return The value of the 'updTs' field.
   */
  public java.lang.Long getUpdTs() {
    return updTs;
  }


  /**
   * Sets the value of the 'updTs' field.
   * @param value the value to set.
   */
  public void setUpdTs(java.lang.Long value) {
    this.updTs = value;
  }

  /**
   * Creates a new UserDTO RecordBuilder.
   * @return A new UserDTO RecordBuilder
   */
  public static org.examples.sb.models.avro.UserDTO.Builder newBuilder() {
    return new org.examples.sb.models.avro.UserDTO.Builder();
  }

  /**
   * Creates a new UserDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserDTO RecordBuilder
   */
  public static org.examples.sb.models.avro.UserDTO.Builder newBuilder(org.examples.sb.models.avro.UserDTO.Builder other) {
    if (other == null) {
      return new org.examples.sb.models.avro.UserDTO.Builder();
    } else {
      return new org.examples.sb.models.avro.UserDTO.Builder(other);
    }
  }

  /**
   * Creates a new UserDTO RecordBuilder by copying an existing UserDTO instance.
   * @param other The existing instance to copy.
   * @return A new UserDTO RecordBuilder
   */
  public static org.examples.sb.models.avro.UserDTO.Builder newBuilder(org.examples.sb.models.avro.UserDTO other) {
    if (other == null) {
      return new org.examples.sb.models.avro.UserDTO.Builder();
    } else {
      return new org.examples.sb.models.avro.UserDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserDTO>
    implements org.apache.avro.data.RecordBuilder<UserDTO> {

    private java.lang.Long id;
    private java.lang.String uuid;
    private java.lang.String name;
    private java.lang.String emailAddr;
    private java.lang.Integer age;
    private java.lang.Integer dob;
    private java.lang.Float height;
    private java.util.List<java.lang.String> roles;
    private java.lang.String status;
    private java.lang.Long addTs;
    private java.lang.Long updTs;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.examples.sb.models.avro.UserDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.emailAddr)) {
        this.emailAddr = data().deepCopy(fields()[3].schema(), other.emailAddr);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.age)) {
        this.age = data().deepCopy(fields()[4].schema(), other.age);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.dob)) {
        this.dob = data().deepCopy(fields()[5].schema(), other.dob);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.height)) {
        this.height = data().deepCopy(fields()[6].schema(), other.height);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.roles)) {
        this.roles = data().deepCopy(fields()[7].schema(), other.roles);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.addTs)) {
        this.addTs = data().deepCopy(fields()[9].schema(), other.addTs);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.updTs)) {
        this.updTs = data().deepCopy(fields()[10].schema(), other.updTs);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing UserDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(org.examples.sb.models.avro.UserDTO other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.emailAddr)) {
        this.emailAddr = data().deepCopy(fields()[3].schema(), other.emailAddr);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.age)) {
        this.age = data().deepCopy(fields()[4].schema(), other.age);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dob)) {
        this.dob = data().deepCopy(fields()[5].schema(), other.dob);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.height)) {
        this.height = data().deepCopy(fields()[6].schema(), other.height);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.roles)) {
        this.roles = data().deepCopy(fields()[7].schema(), other.roles);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.addTs)) {
        this.addTs = data().deepCopy(fields()[9].schema(), other.addTs);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updTs)) {
        this.updTs = data().deepCopy(fields()[10].schema(), other.updTs);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }


    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setUuid(java.lang.String value) {
      validate(fields()[1], value);
      this.uuid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddr' field.
      * @return The value.
      */
    public java.lang.String getEmailAddr() {
      return emailAddr;
    }


    /**
      * Sets the value of the 'emailAddr' field.
      * @param value The value of 'emailAddr'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setEmailAddr(java.lang.String value) {
      validate(fields()[3], value);
      this.emailAddr = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddr' field has been set.
      * @return True if the 'emailAddr' field has been set, false otherwise.
      */
    public boolean hasEmailAddr() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'emailAddr' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearEmailAddr() {
      emailAddr = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }


    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setAge(java.lang.Integer value) {
      validate(fields()[4], value);
      this.age = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearAge() {
      age = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'dob' field.
      * @return The value.
      */
    public java.lang.Integer getDob() {
      return dob;
    }


    /**
      * Sets the value of the 'dob' field.
      * @param value The value of 'dob'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setDob(java.lang.Integer value) {
      validate(fields()[5], value);
      this.dob = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'dob' field has been set.
      * @return True if the 'dob' field has been set, false otherwise.
      */
    public boolean hasDob() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'dob' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearDob() {
      dob = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public java.lang.Float getHeight() {
      return height;
    }


    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setHeight(java.lang.Float value) {
      validate(fields()[6], value);
      this.height = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearHeight() {
      height = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'roles' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getRoles() {
      return roles;
    }


    /**
      * Sets the value of the 'roles' field.
      * @param value The value of 'roles'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setRoles(java.util.List<java.lang.String> value) {
      validate(fields()[7], value);
      this.roles = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'roles' field has been set.
      * @return True if the 'roles' field has been set, false otherwise.
      */
    public boolean hasRoles() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'roles' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearRoles() {
      roles = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setStatus(java.lang.String value) {
      validate(fields()[8], value);
      this.status = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearStatus() {
      status = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'addTs' field.
      * @return The value.
      */
    public java.lang.Long getAddTs() {
      return addTs;
    }


    /**
      * Sets the value of the 'addTs' field.
      * @param value The value of 'addTs'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setAddTs(java.lang.Long value) {
      validate(fields()[9], value);
      this.addTs = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'addTs' field has been set.
      * @return True if the 'addTs' field has been set, false otherwise.
      */
    public boolean hasAddTs() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'addTs' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearAddTs() {
      addTs = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'updTs' field.
      * @return The value.
      */
    public java.lang.Long getUpdTs() {
      return updTs;
    }


    /**
      * Sets the value of the 'updTs' field.
      * @param value The value of 'updTs'.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder setUpdTs(java.lang.Long value) {
      validate(fields()[10], value);
      this.updTs = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'updTs' field has been set.
      * @return True if the 'updTs' field has been set, false otherwise.
      */
    public boolean hasUpdTs() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'updTs' field.
      * @return This builder.
      */
    public org.examples.sb.models.avro.UserDTO.Builder clearUpdTs() {
      updTs = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserDTO build() {
      try {
        UserDTO record = new UserDTO();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.uuid = fieldSetFlags()[1] ? this.uuid : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.emailAddr = fieldSetFlags()[3] ? this.emailAddr : (java.lang.String) defaultValue(fields()[3]);
        record.age = fieldSetFlags()[4] ? this.age : (java.lang.Integer) defaultValue(fields()[4]);
        record.dob = fieldSetFlags()[5] ? this.dob : (java.lang.Integer) defaultValue(fields()[5]);
        record.height = fieldSetFlags()[6] ? this.height : (java.lang.Float) defaultValue(fields()[6]);
        record.roles = fieldSetFlags()[7] ? this.roles : (java.util.List<java.lang.String>) defaultValue(fields()[7]);
        record.status = fieldSetFlags()[8] ? this.status : (java.lang.String) defaultValue(fields()[8]);
        record.addTs = fieldSetFlags()[9] ? this.addTs : (java.lang.Long) defaultValue(fields()[9]);
        record.updTs = fieldSetFlags()[10] ? this.updTs : (java.lang.Long) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserDTO>
    READER$ = (org.apache.avro.io.DatumReader<UserDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.uuid == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.uuid);
    }

    out.writeString(this.name);

    out.writeString(this.emailAddr);

    if (this.age == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.age);
    }

    if (this.dob == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.dob);
    }

    if (this.height == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeFloat(this.height);
    }

    if (this.roles == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.roles.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.lang.String e0: this.roles) {
        actualSize0++;
        out.startItem();
        out.writeString(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    out.writeString(this.status);

    if (this.addTs == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.addTs);
    }

    if (this.updTs == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.updTs);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.uuid = null;
      } else {
        this.uuid = in.readString();
      }

      this.name = in.readString();

      this.emailAddr = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.age = null;
      } else {
        this.age = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.dob = null;
      } else {
        this.dob = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.height = null;
      } else {
        this.height = in.readFloat();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.roles = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<java.lang.String> a0 = this.roles;
        if (a0 == null) {
          a0 = new SpecificData.Array<java.lang.String>((int)size0, SCHEMA$.getField("roles").schema().getTypes().get(1));
          this.roles = a0;
        } else a0.clear();
        SpecificData.Array<java.lang.String> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.String e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readString();
            a0.add(e0);
          }
        }
      }

      this.status = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.addTs = null;
      } else {
        this.addTs = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.updTs = null;
      } else {
        this.updTs = in.readLong();
      }

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.uuid = null;
          } else {
            this.uuid = in.readString();
          }
          break;

        case 2:
          this.name = in.readString();
          break;

        case 3:
          this.emailAddr = in.readString();
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.age = null;
          } else {
            this.age = in.readInt();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.dob = null;
          } else {
            this.dob = in.readInt();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.height = null;
          } else {
            this.height = in.readFloat();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.roles = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.String> a0 = this.roles;
            if (a0 == null) {
              a0 = new SpecificData.Array<java.lang.String>((int)size0, SCHEMA$.getField("roles").schema().getTypes().get(1));
              this.roles = a0;
            } else a0.clear();
            SpecificData.Array<java.lang.String> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.String e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readString();
                a0.add(e0);
              }
            }
          }
          break;

        case 8:
          this.status = in.readString();
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addTs = null;
          } else {
            this.addTs = in.readLong();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.updTs = null;
          } else {
            this.updTs = in.readLong();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










